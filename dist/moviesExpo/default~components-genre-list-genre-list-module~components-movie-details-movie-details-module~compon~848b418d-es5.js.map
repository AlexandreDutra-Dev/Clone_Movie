{"version":3,"sources":["default~components-genre-list-genre-list-module~components-movie-details-movie-details-module~compon~848b418d-es5.js","webpack:///node_modules/@angular/material/esm2015/tabs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,+GAA+G,CAAC,EAAC;QAEhL,KAAK,CAAC,kDAAkD;QACxD;;oEAE4D;QAC5D,4WAA4W;QAC5W,KAAK,CAAC,CAAC,UAAS,MAAM,EAAE,mBAAmB,EAAE,mBAAmB;YAEhE,YAAY,CAAC;YCTb;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;;;;;;eAMG;YAiBH;;;eAGG;YACH;;;eAGG;YACH,IAAM,uBAAuB,GAAG,IAAI,4DAAc,CAAC,qBAAqB,EAAE;gBACtE,UAAU,EAAE,MAAM;gBAClB,OAAO,EAAE,+BAA+B;aAC3C,CAAC,CAAC;YACH;;;;eAIG;YACH,SAAS,+BAA+B;gBACpC,gBAAgB;gBAChB,IAAM,MAAM,GAAG,EAAC;;;mBAIhB,UAAC,OAAO,IAAK,QAAC;oBACV,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG;oBACtD,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG;iBAC3D,CAAC,EAHW,CAGX,CAAC,CAAC;gBACJ,OAAO,MAAM,CAAC;YAClB,CAAC;YACD;;;eAGG;YACH;gBACI;;;;;mBAKG;gBACH,mBAAY,WAAW,EAAE,OAAO,EAAE,iBAAiB,EAAE,cAAc;oBAC/D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;oBAC3C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;gBACzC,CAAC;gBACD;;;;;mBAKG;gBACH,kCAAc,GAAd,UAAe,OAAO;oBAAtB,iBAgBC;oBAfG,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,IAAI,OAAO,qBAAqB,KAAK,WAAW,EAAE;wBAC9C,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAC;;2BAGhC;4BACI,qBAAqB,CAAC,EAAC;;+BAGvB,cAAM,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC;wBACrC,CAAC,CAAC,CAAC,CAAC;qBACP;yBACI;wBACD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;qBAC5B;gBACL,CAAC;gBACD;;;mBAGG;gBACH,wBAAI,GAAJ;oBACI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;gBAChE,CAAC;gBACD;;;mBAGG;gBACH,wBAAI,GAAJ;oBACI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC/D,CAAC;gBACD;;;;;mBAKG;gBACH,8BAAU,GAAV,UAAW,OAAO;oBACd,gBAAgB;oBAChB,IAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;oBAClD,gBAAgB;oBAChB,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;oBAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;oBACnC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;gBACzC,CAAC;gBACL,gBAAC;YAAD,CAAC;YACD,SAAS,CAAC,UAAU,GAAG;gBACnB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,QAAQ,EAAE,aAAa;4BACvB,IAAI,EAAE;gCACF,OAAO,EAAE,aAAa;gCACtB,iCAAiC,EAAE,qCAAqC;6BAC3E;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,SAAS,CAAC,cAAc,GAAG,cAAM;gBAC7B,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,uBAAuB,EAAE,EAAE,CAAC,EAAE;gBACrF,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EALgC,CAKhC,CAAC;YAEF;;;eAGG;YACH;;eAEG;YACH;gBACI;;mBAEG;gBACH,uBAAY,QAAQ;oBAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC7B,CAAC;gBACL,oBAAC;YAAD,CAAC;YACD,aAAa,CAAC,UAAU,GAAG;gBACvB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,EAAE,EAAE;aAChE,CAAC;YACF,kBAAkB;YAClB,aAAa,CAAC,cAAc,GAAG,cAAM;gBACjC,EAAE,IAAI,EAAE,yDAAW,EAAE;aACxB,EAFoC,CAEpC,CAAC;YAEF;;;eAGG;YACH;;eAEG;YACH;gBAA0B,+BAAS;gBAAnC;;gBACA,CAAC;gBAAD,kBAAC;YAAD,CAAC,CADyB,6DAAS,GAClC;YACD,WAAW,CAAC,UAAU,GAAG;gBACrB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,QAAQ,EAAE,gCAAgC;yBAC7C,EAAE,EAAE;aAChB,CAAC;YAEF;;;eAGG;YACH,6CAA6C;YAC7C;;eAEG;YACH;gBAAA;gBACA,CAAC;gBAAD,iBAAC;YAAD,CAAC;YACD,gBAAgB;YAChB,IAAM,gBAAgB,GAAG,4EAAa,CAAC,UAAU,CAAC,CAAC;YACnD;gBAAqB,0BAAgB;gBACjC;;mBAEG;gBACH,gBAAY,iBAAiB;oBAA7B,YACI,iBAAO,SA4BV;oBA3BG,KAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;oBAC3C;;uBAEG;oBACH,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB;;uBAEG;oBACH,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B;;uBAEG;oBACH,KAAI,CAAC,aAAa,GAAG,IAAI,4CAAO,EAAE,CAAC;oBACnC;;;uBAGG;oBACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB;;;uBAGG;oBACH,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB;;uBAEG;oBACH,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;gBAC1B,CAAC;gBAKD,sBAAI,2BAAO;oBAJX;;;uBAGG;yBACH;wBACI,OAAO,IAAI,CAAC,cAAc,CAAC;oBAC/B,CAAC;;;mBAAA;gBACD;;;mBAGG;gBACH,4BAAW,GAAX,UAAY,OAAO;oBACf,IAAI,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;wBAC3E,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;qBAC7B;gBACL,CAAC;gBACD;;mBAEG;gBACH,4BAAW,GAAX;oBACI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAClC,CAAC;gBACD;;mBAEG;gBACH,yBAAQ,GAAR;oBACI,IAAI,CAAC,cAAc,GAAG,IAAI,kEAAc,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACrH,CAAC;gBACL,aAAC;YAAD,CAAC,CA9DoB,gBAAgB,GA8DpC;YACD,MAAM,CAAC,UAAU,GAAG;gBAChB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,SAAS;4BAClC,QAAQ,EAAE,sDAAsD;4BAChE,MAAM,EAAE,CAAC,UAAU,CAAC;4BACpB,eAAe,EAAE,qEAAuB,CAAC,MAAM;4BAC/C,aAAa,EAAE,+DAAiB,CAAC,IAAI;4BACrC,QAAQ,EAAE,QAAQ;yBACrB,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,MAAM,CAAC,cAAc,GAAG,cAAM;gBAC1B,EAAE,IAAI,EAAE,8DAAgB,EAAE;aAC7B,EAF6B,CAE7B,CAAC;YACF,MAAM,CAAC,cAAc,GAAG;gBACpB,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,0DAAY,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;gBAChF,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,0DAAY,EAAE,IAAI,EAAE,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,yDAAW,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACvG,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,yDAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBAC/E,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;gBAC9C,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC;gBACnD,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,IAAI,EAAE,CAAC,iBAAiB,EAAE,EAAE,CAAC;aAChE,CAAC;YAEF;;;eAGG;YACH;;;;eAIG;YACH,IAAM,iBAAiB,GAAG;gBACtB;;mBAEG;gBACH,YAAY,EAAE,mEAAO,CAAC,cAAc,EAAE;oBAClC,0FAA0F;oBAC1F,iEAAK,CAAC,uDAAuD,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;oBAC5F,uFAAuF;oBACvF,qFAAqF;oBACrF,4FAA4F;oBAC5F,yEAAyE;oBACzE,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;oBACjF,iEAAK,CAAC,OAAO,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,yBAAyB,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;oBACjF,sEAAU,CAAC,wDAAwD,EAAE,mEAAO,CAAC,sDAAsD,CAAC,CAAC;oBACrI,sEAAU,CAAC,4BAA4B,EAAE;wBACrC,iEAAK,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC;wBAChD,mEAAO,CAAC,sDAAsD,CAAC;qBAClE,CAAC;oBACF,sEAAU,CAAC,6BAA6B,EAAE;wBACtC,iEAAK,CAAC,EAAE,SAAS,EAAE,yBAAyB,EAAE,CAAC;wBAC/C,mEAAO,CAAC,sDAAsD,CAAC;qBAClE,CAAC;iBACL,CAAC;aACL,CAAC;YAEF;;;eAGG;YACH;;;eAGG;YACH;gBAA+B,oCAAe;gBAC1C;;;;mBAIG;gBACH,0BAAY,wBAAwB,EAAE,gBAAgB,EAAE,KAAK;oBAA7D,YACI,kBAAM,wBAAwB,EAAE,gBAAgB,CAAC,SAUpD;oBATG,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB;;uBAEG;oBACH,KAAI,CAAC,aAAa,GAAG,iDAAY,CAAC,KAAK,CAAC;oBACxC;;uBAEG;oBACH,KAAI,CAAC,WAAW,GAAG,iDAAY,CAAC,KAAK,CAAC;;gBAC1C,CAAC;gBACD;;;mBAGG;gBACH,mCAAQ,GAAR;oBAAA,iBAmBC;oBAlBG,iBAAM,QAAQ,WAAE,CAAC;oBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB;yBAC3C,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;yBACnE,SAAS,CAAC,EAAC;;;mBAIhB,UAAC,WAAW;wBACR,IAAI,WAAW,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,EAAE;4BACpC,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;yBACpC;oBACL,CAAC,CAAC,CAAC,CAAC;oBACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAC;;uBAG7D;wBACI,KAAI,CAAC,MAAM,EAAE,CAAC;oBAClB,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBACD;;;mBAGG;gBACH,sCAAW,GAAX;oBACI,iBAAM,WAAW,WAAE,CAAC;oBACpB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;gBACnC,CAAC;gBACL,uBAAC;YAAD,CAAC,CAnD8B,mEAAe,GAmD7C;YACD,gBAAgB,CAAC,UAAU,GAAG;gBAC1B,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,QAAQ,EAAE,kBAAkB;yBAC/B,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,gBAAgB,CAAC,cAAc,GAAG,cAAM;gBACpC,EAAE,IAAI,EAAE,sEAAwB,EAAE;gBAClC,EAAE,IAAI,EAAE,8DAAgB,EAAE;gBAC1B,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,gEAAU,CAAC,EAAC;;mDAGpD,cAAM,iBAAU,EAAV,CAAU,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;aAC5C,EAPuC,CAOvC,CAAC;YACF;;;;eAIG;YACH,sCAAsC;YACtC;gBACI;;;;mBAIG;gBACH,yBAAY,WAAW,EAAE,IAAI,EAAE,iBAAiB;oBAAhD,iBAiEC;oBAhEG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB;;uBAEG;oBACH,IAAI,CAAC,sBAAsB,GAAG,iDAAY,CAAC,KAAK,CAAC;oBACjD;;uBAEG;oBACH,IAAI,CAAC,qBAAqB,GAAG,IAAI,4CAAO,EAAE,CAAC;oBAC3C;;uBAEG;oBACH,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;oBACvC;;uBAEG;oBACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;oBAC3C;;uBAEG;oBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;oBAC9C;;uBAEG;oBACH,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAY,CAAC,IAAI,CAAC,CAAC;oBAC1C,0FAA0F;oBAC1F,iGAAiG;oBACjG;;uBAEG;oBACH,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;oBACjC,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC;;;2BAIrD,UAAC,GAAG;4BACA,KAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC;4BACzC,iBAAiB,CAAC,YAAY,EAAE,CAAC;wBACrC,CAAC,CAAC,CAAC,CAAC;qBACP;oBACD,mFAAmF;oBACnF,uFAAuF;oBACvF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,2EAAoB,CAAC,EAAC;;;;uBAKtD,UAAC,CAAC,EAAE,CAAC;wBACD,OAAO,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC;oBAClE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAC;;;uBAIhB,UAJgB;;;uBAGb,CACH,KAAK;wBACD,8DAA8D;wBAC9D,IAAI,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE;4BACjF,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;yBAC3B;wBACD,IAAI,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE;4BACpF,KAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;yBACnC;oBACL,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBAMD,sBAAI,qCAAQ;oBALZ;;;;uBAIG;yBACH,UAAa,QAAQ;wBACjB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAC/B,IAAI,CAAC,8BAA8B,EAAE,CAAC;oBAC1C,CAAC;;;mBAAA;gBACD;;;;mBAIG;gBACH,kCAAQ,GAAR;oBACI,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;qBACtD;gBACL,CAAC;gBACD;;mBAEG;gBACH,qCAAW,GAAX;oBACI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;oBAC1C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;gBAC1C,CAAC;gBACD;;;mBAGG;gBACH,gDAAsB,GAAtB,UAAuB,KAAK;oBACxB,gBAAgB;oBAChB,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC1D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACxC,IAAI,WAAW,EAAE;wBACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;qBACvE;gBACL,CAAC;gBACD;;;mBAGG;gBACH,6CAAmB,GAAnB;oBACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;gBAClE,CAAC;gBACD;;;;mBAIG;gBACH,2CAAiB,GAAjB,UAAkB,QAAQ;oBACtB,OAAO,QAAQ,IAAI,QAAQ;wBACvB,QAAQ,IAAI,oBAAoB;wBAChC,QAAQ,IAAI,qBAAqB,CAAC;gBAC1C,CAAC;gBACD;;;;;mBAKG;gBACH,wDAA8B,GAA9B,UAA+B,GAAgC;oBAAhC,4BAAM,IAAI,CAAC,mBAAmB,EAAE;oBAC3D,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;wBACzB,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;qBACpD;yBACI,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;wBAC9B,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;qBACpD;yBACI;wBACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;qBAC7B;gBACL,CAAC;gBACD;;;;;mBAKG;gBACH,oDAA0B,GAA1B;oBACI,gBAAgB;oBAChB,IAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBACvC,IAAI,CAAC,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;wBACzE,OAAO,oBAAoB,CAAC;qBAC/B;oBACD,OAAO,qBAAqB,CAAC;gBACjC,CAAC;gBACL,sBAAC;YAAD,CAAC;YACD,eAAe,CAAC,UAAU,GAAG;gBACzB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,uCAAuC;yBACpD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,eAAe,CAAC,cAAc,GAAG,cAAM;gBACnC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,+DAAiB,EAAE;aAC9B,EAJsC,CAItC,CAAC;YACF,eAAe,CAAC,cAAc,GAAG;gBAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBAChC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBACpC,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBACvC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBAC/B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC;gBAC/C,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBACzB,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBACpC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;aAC9B,CAAC;YACF;;;eAGG;YACH;gBAAyB,8BAAe;gBACpC;;;;mBAIG;gBACH,oBAAY,UAAU,EAAE,GAAG,EAAE,iBAAiB;2BAC1C,kBAAM,UAAU,EAAE,GAAG,EAAE,iBAAiB,CAAC;gBAC7C,CAAC;gBACL,iBAAC;YAAD,CAAC,CATwB,eAAe,GASvC;YACD,UAAU,CAAC,UAAU,GAAG;gBACpB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,cAAc;4BACvC,QAAQ,EAAE,6SAA6S;4BACvT,MAAM,EAAE,CAAC,sHAAsH,CAAC;4BAChI,aAAa,EAAE,+DAAiB,CAAC,IAAI;4BACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;4BAC/C,UAAU,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC;4BAC5C,IAAI,EAAE;gCACF,OAAO,EAAE,cAAc;6BAC1B;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,UAAU,CAAC,cAAc,GAAG,cAAM;gBAC9B,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,+DAAiB,EAAE;aAC9B,EAJiC,CAIjC,CAAC;YACF,UAAU,CAAC,cAAc,GAAG;gBACxB,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,uEAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;aACtF,CAAC;YAEF;;;eAGG;YACH;;;eAGG;YACH,IAAI,MAAM,GAAG,CAAC,CAAC;YACf;;eAEG;YACH;gBAAA;gBACA,CAAC;gBAAD,wBAAC;YAAD,CAAC;YACD;;;eAGG;YACH,IAAM,eAAe,GAAG,IAAI,4DAAc,CAAC,iBAAiB,CAAC,CAAC;YAC9D,kDAAkD;YAClD;;eAEG;YACH;gBACI;;mBAEG;gBACH,8BAAY,WAAW;oBACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBACnC,CAAC;gBACL,2BAAC;YAAD,CAAC;YACD,gBAAgB;YAChB,IAAM,qBAAqB,GAAG,yEAAU,CAAC,iFAAkB,CAAC,oBAAoB,CAAC,EAAE,SAAS,CAAC,CAAC;YAC9F;;;;eAIG;YACH,sCAAsC;YACtC;gBAA+B,oCAAqB;gBAChD;;;;;mBAKG;gBACH,0BAAY,UAAU,EAAE,kBAAkB,EAAE,aAAa,EAAE,cAAc;oBAAzE,YACI,kBAAM,UAAU,CAAC,SA4CpB;oBA3CG,KAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBAC7C,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC;;uBAEG;oBACH,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;oBACxB;;uBAEG;oBACH,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;oBAC/B;;uBAEG;oBACH,KAAI,CAAC,iBAAiB,GAAG,iDAAY,CAAC,KAAK,CAAC;oBAC5C;;uBAEG;oBACH,KAAI,CAAC,qBAAqB,GAAG,iDAAY,CAAC,KAAK,CAAC;oBAChD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B;;uBAEG;oBACH,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;oBAC9B;;uBAEG;oBACH,KAAI,CAAC,mBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;oBAC9C;;uBAEG;oBACH,KAAI,CAAC,WAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;oBACtC;;uBAEG;oBACH,KAAI,CAAC,aAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;oBACxC;;uBAEG;oBACH,KAAI,CAAC,iBAAiB,GAAG,IAAI,0DAAY,CAAC,IAAI,CAAC,CAAC;oBAChD,KAAI,CAAC,QAAQ,GAAG,MAAM,EAAE,CAAC;oBACzB,KAAI,CAAC,iBAAiB,GAAG,aAAa,IAAI,aAAa,CAAC,iBAAiB,CAAC,CAAC;wBACvE,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC;;gBAClD,CAAC;gBAKD,sBAAI,2CAAa;oBAJjB;;;uBAGG;yBACH,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnD;;;uBAGG;yBACH,UAAkB,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,mFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;mBAL7B;gBAUnD,sBAAI,2CAAa;oBAJjB;;;uBAGG;yBACH,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnD;;;uBAGG;yBACH,UAAkB,KAAK;wBACnB,IAAI,CAAC,cAAc,GAAG,kFAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBAC5D,CAAC;;;mBAPkD;gBAYnD,sBAAI,+CAAiB;oBAJrB;;;uBAGG;yBACH,cAA0B,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC3D;;;uBAGG;yBACH,UAAsB,KAAK;wBACvB,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzE,CAAC;;;mBAP0D;gBAY3D,sBAAI,6CAAe;oBAJnB;;;uBAGG;yBACH,cAAwB,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACvD;;;uBAGG;yBACH,UAAoB,KAAK;wBACrB,gBAAgB;wBAChB,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;wBACrD,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAkB,IAAI,CAAC,eAAiB,CAAC,CAAC;wBACzE,IAAI,KAAK,EAAE;4BACP,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAkB,KAAO,CAAC,CAAC;yBAC1D;wBACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAClC,CAAC;;;mBAbsD;gBAcvD;;;;;;mBAMG;gBACH,gDAAqB,GAArB;oBAAA,iBAgDC;oBA/CG,uFAAuF;oBACvF,sEAAsE;oBACtE,gBAAgB;oBAChB,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACrF,qFAAqF;oBACrF,mDAAmD;oBACnD,IAAI,IAAI,CAAC,cAAc,IAAI,aAAa,EAAE;wBACtC,gBAAgB;wBAChB,IAAM,YAAU,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;wBAC/C,IAAI,CAAC,YAAU,EAAE;4BACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC;yBACvE;wBACD,uDAAuD;wBACvD,4DAA4D;wBAC5D,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAC;;2BAGxB;4BACI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;;;;+BAKpB,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,CAAC,QAAQ,GAAG,KAAK,KAAK,aAAa,EAAtC,CAAsC,CAAC,CAAC,CAAC;4BACzD,IAAI,CAAC,YAAU,EAAE;gCACb,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;6BAChD;wBACL,CAAC,CAAC,CAAC,CAAC;qBACP;oBACD,2FAA2F;oBAC3F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;;;;uBAKpB,UAAC,GAAG,EAAE,KAAK;wBACP,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,aAAa,CAAC;wBACrC,sFAAsF;wBACtF,kCAAkC;wBAClC,IAAI,KAAI,CAAC,cAAc,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;4BACjE,GAAG,CAAC,MAAM,GAAG,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC;yBACpD;oBACL,CAAC,CAAC,CAAC,CAAC;oBACJ,IAAI,IAAI,CAAC,cAAc,KAAK,aAAa,EAAE;wBACvC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;wBACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;qBAC1C;gBACL,CAAC;gBACD;;mBAEG;gBACH,6CAAkB,GAAlB;oBAAA,iBA4BC;oBA3BG,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,6DAA6D;oBAC7D,kEAAkE;oBAClE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC;;uBAGvD;wBACI,gBAAgB;wBAChB,IAAM,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;wBAC/D,wFAAwF;wBACxF,gDAAgD;wBAChD,IAAI,aAAa,KAAK,KAAI,CAAC,cAAc,EAAE;4BACvC,gBAAgB;4BAChB,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;4BAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAClC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;oCAClB,sFAAsF;oCACtF,uFAAuF;oCACvF,uDAAuD;oCACvD,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;oCAC9C,MAAM;iCACT;6BACJ;yBACJ;wBACD,KAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;oBAC3C,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBACD;;mBAEG;gBACH,sCAAW,GAAX;oBACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;oBACrC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;gBAC7C,CAAC;gBACD;;;mBAGG;gBACH,wCAAa,GAAb;oBACI,IAAI,IAAI,CAAC,UAAU,EAAE;wBACjB,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;qBAC/C;gBACL,CAAC;gBACD;;;mBAGG;gBACH,wCAAa,GAAb,UAAc,KAAK;oBACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1D,CAAC;gBACD;;;;mBAIG;gBACH,6CAAkB,GAAlB,UAAmB,KAAK;oBACpB,gBAAgB;oBAChB,IAAM,KAAK,GAAG,IAAI,iBAAiB,CAAC;oBACpC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;oBACpB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACjC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;qBAC3C;oBACD,OAAO,KAAK,CAAC;gBACjB,CAAC;gBACD;;;;;;;mBAOG;gBACH,gDAAqB,GAArB;oBAAA,iBAaC;oBAZG,IAAI,IAAI,CAAC,qBAAqB,EAAE;wBAC5B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;qBAC5C;oBACD,IAAI,CAAC,qBAAqB,GAAG,kDAAK,wBAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;;;uBAItD,UAJsD;;;uBAGnD,CACH,GAAG,IAAI,UAAG,CAAC,aAAa,EAAjB,CAAiB,CAAC,CAAC,GACrB,SAAS,CAAC,EAAC;;mBAGhB,cAAM,YAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAtC,CAAsC,CAAC,CAAC,CAAC;gBACnD,CAAC;gBACD;;;;;mBAKG;gBACH,yCAAc,GAAd,UAAe,KAAK;oBAChB,wEAAwE;oBACxE,sEAAsE;oBACtE,oCAAoC;oBACpC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpE,CAAC;gBACD;;;;mBAIG;gBACH,yCAAc,GAAd,UAAe,CAAC;oBACZ,OAAO,mBAAiB,IAAI,CAAC,QAAQ,SAAI,CAAG,CAAC;gBACjD,CAAC;gBACD;;;;mBAIG;gBACH,2CAAgB,GAAhB,UAAiB,CAAC;oBACd,OAAO,qBAAmB,IAAI,CAAC,QAAQ,SAAI,CAAG,CAAC;gBACnD,CAAC;gBACD;;;;;mBAKG;gBACH,mDAAwB,GAAxB,UAAyB,SAAS;oBAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;wBACrD,OAAO;qBACV;oBACD,gBAAgB;oBAChB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACnD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBACzD,kEAAkE;oBAClE,sDAAsD;oBACtD,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,EAAE;wBACjD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;qBAC3C;gBACL,CAAC;gBACD;;;mBAGG;gBACH,sDAA2B,GAA3B;oBACI,gBAAgB;oBAChB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACnD,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,YAAY,CAAC;oBAClD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAC9B,CAAC;gBACD;;;;;;mBAMG;gBACH,uCAAY,GAAZ,UAAa,GAAG,EAAE,SAAS,EAAE,KAAK;oBAC9B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;wBACf,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;qBACrD;gBACL,CAAC;gBACD;;;;;mBAKG;gBACH,uCAAY,GAAZ,UAAa,GAAG,EAAE,GAAG;oBACjB,IAAI,GAAG,CAAC,QAAQ,EAAE;wBACd,OAAO,IAAI,CAAC;qBACf;oBACD,OAAO,IAAI,CAAC,aAAa,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,CAAC;gBACL,uBAAC;YAAD,CAAC,CA9U8B,qBAAqB,GA8UnD;YACD,gBAAgB,CAAC,UAAU,GAAG;gBAC1B,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,wCAAwC;yBACrD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,gBAAgB,CAAC,cAAc,GAAG,cAAM;gBACpC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBACjG,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EALuC,CAKvC,CAAC;YACF,gBAAgB,CAAC,cAAc,GAAG;gBAC9B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBAChC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBAChC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBACjC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBACpC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBAClC,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBACvC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;gBACjC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,CAAC;aACxC,CAAC;YACF;;;;eAIG;YACH;gBAA0B,+BAAgB;gBACtC;;;;;mBAKG;gBACH,qBAAY,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa;2BACnE,kBAAM,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,CAAC;gBACtE,CAAC;gBACL,kBAAC;YAAD,CAAC,CAVyB,gBAAgB,GAUzC;YACD,WAAW,CAAC,UAAU,GAAG;gBACrB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,eAAe;4BACxC,QAAQ,EAAE,aAAa;4BACvB,QAAQ,EAAE,6pDAA6pD;4BACvqD,MAAM,EAAE,CAAC,i/CAAi/C,CAAC;4BAC3/C,aAAa,EAAE,+DAAiB,CAAC,IAAI;4BACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;4BAC/C,MAAM,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC;4BAClC,IAAI,EAAE;gCACF,OAAO,EAAE,eAAe;gCACxB,sCAAsC,EAAE,eAAe;gCACvD,uCAAuC,EAAE,4BAA4B;6BACxE;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,WAAW,CAAC,cAAc,GAAG,cAAM;gBAC/B,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBACjG,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EALkC,CAKlC,CAAC;YACF,WAAW,CAAC,cAAc,GAAG;gBACzB,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,6DAAe,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;gBACnD,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;gBACpF,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;aAC7E,CAAC;YAEF;;;eAGG;YACH,yDAAyD;YACzD;;eAEG;YACH;gBAAA;gBACA,CAAC;gBAAD,6BAAC;YAAD,CAAC;YACD,gBAAgB;YAChB,IAAM,4BAA4B,GAAG,4EAAa,CAAC,sBAAsB,CAAC,CAAC;YAC3E;;;eAGG;YACH;gBAAiC,sCAA4B;gBACzD;;mBAEG;gBACH,4BAAY,UAAU;oBAAtB,YACI,iBAAO,SAEV;oBADG,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;gBACjC,CAAC;gBACD;;;mBAGG;gBACH,kCAAK,GAAL;oBACI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAC1C,CAAC;gBACD;;mBAEG;gBACH,0CAAa,GAAb;oBACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;gBACpD,CAAC;gBACD;;mBAEG;gBACH,2CAAc,GAAd;oBACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;gBACrD,CAAC;gBACL,yBAAC;YAAD,CAAC,CA3BgC,4BAA4B,GA2B5D;YACD,kBAAkB,CAAC,UAAU,GAAG;gBAC5B,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,QAAQ,EAAE,sBAAsB;4BAChC,MAAM,EAAE,CAAC,UAAU,CAAC;4BACpB,IAAI,EAAE;gCACF,0BAA0B,EAAE,UAAU;gCACtC,sBAAsB,EAAE,YAAY;6BACvC;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,kBAAkB,CAAC,cAAc,GAAG,cAAM;gBACtC,EAAE,IAAI,EAAE,wDAAU,EAAE;aACvB,EAFyC,CAEzC,CAAC;YAEF;;;eAGG;YACH;;;eAGG;YACH,IAAM,2BAA2B,GAAG,EAAC,gBAAiB,CAAC,8FAA+B,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5G;;;;eAIG;YACH,IAAM,sBAAsB,GAAG,EAAE,CAAC;YAClC;;;;eAIG;YACH,IAAM,mBAAmB,GAAG,GAAG,CAAC;YAChC;;;;eAIG;YACH,IAAM,sBAAsB,GAAG,GAAG,CAAC;YACnC;;;;eAIG;YACH;gBACI;;;;;;;;mBAQG;gBACH,+BAAY,WAAW,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc;oBAArG,iBA2DC;oBA1DG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC/B,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBAC7C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC;;uBAEG;oBACH,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;oBACzB;;uBAEG;oBACH,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;oBACnC;;uBAEG;oBACH,IAAI,CAAC,UAAU,GAAG,IAAI,4CAAO,EAAE,CAAC;oBAChC;;uBAEG;oBACH,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACrC;;uBAEG;oBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAChC;;uBAEG;oBACH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC;;uBAEG;oBACH,IAAI,CAAC,cAAc,GAAG,IAAI,4CAAO,EAAE,CAAC;oBACpC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;oBACxB;;uBAEG;oBACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,0DAAY,EAAE,CAAC;oBAC7C;;uBAEG;oBACH,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;oBACvC,2FAA2F;oBAC3F,OAAO,CAAC,iBAAiB,CAAC,EAAC;;uBAG3B;wBACI,sDAAS,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC;6BAC7C,IAAI,CAAC,gEAAS,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;6BAChC,SAAS,CAAC,EAAC;;uBAGhB;4BACI,KAAI,CAAC,aAAa,EAAE,CAAC;wBACzB,CAAC,CAAC,CAAC,CAAC;oBACR,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBAKD,sBAAI,gDAAa;oBAJjB;;;uBAGG;yBACH,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnD;;;uBAGG;yBACH,UAAkB,KAAK;wBACnB,KAAK,GAAG,kFAAoB,CAAC,KAAK,CAAC,CAAC;wBACpC,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;4BAC9B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;4BAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;4BAC5B,IAAI,IAAI,CAAC,WAAW,EAAE;gCAClB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;6BACjD;yBACJ;oBACL,CAAC;;;mBAdkD;gBAenD;;mBAEG;gBACH,+CAAe,GAAf;oBAAA,iBAkBC;oBAjBG,4FAA4F;oBAC5F,sDAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,YAAY,EAAE,2BAA2B,CAAC;yBACtF,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBAChC,SAAS,CAAC,EAAC;;mBAGhB;wBACI,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC,CAAC;oBACJ,sDAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,EAAE,2BAA2B,CAAC;yBAClF,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBAChC,SAAS,CAAC,EAAC;;mBAGhB;wBACI,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;oBACxC,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBACD;;mBAEG;gBACH,kDAAkB,GAAlB;oBAAA,iBAwCC;oBAvCG,gBAAgB;oBAChB,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;oBAC1D,gBAAgB;oBAChB,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC/C,gBAAgB;oBAChB,IAAM,OAAO,GAAG,EAAC;;uBAGjB;wBACI,KAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,KAAI,CAAC,yBAAyB,EAAE,CAAC;oBACrC,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,WAAW,GAAG,IAAI,kEAAe,CAAC,IAAI,CAAC,MAAM,CAAC;yBAC9C,yBAAyB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;yBACrD,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACrC,sFAAsF;oBACtF,mFAAmF;oBACnF,OAAO,qBAAqB,KAAK,WAAW,CAAC,CAAC,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;oBAC1F,oFAAoF;oBACpF,gDAAgD;oBAChD,kDAAK,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,EAAC;;uBAG1F;wBACI,OAAO,EAAE,CAAC;wBACV,KAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;oBAC3E,CAAC,CAAC,CAAC,CAAC;oBACJ,mFAAmF;oBACnF,8FAA8F;oBAC9F,gFAAgF;oBAChF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,EAAC;;;uBAIpE,UAJoE;;;uBAGjE,CACH,aAAa;wBACT,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBACtC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBACD;;mBAEG;gBACH,qDAAqB,GAArB;oBACI,iFAAiF;oBACjF,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;wBAC3C,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;qBAC1C;oBACD,6FAA6F;oBAC7F,sBAAsB;oBACtB,IAAI,IAAI,CAAC,qBAAqB,EAAE;wBAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBACzC,IAAI,CAAC,uBAAuB,EAAE,CAAC;wBAC/B,IAAI,CAAC,yBAAyB,EAAE,CAAC;wBACjC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBACnC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;qBAC1C;oBACD,8FAA8F;oBAC9F,6CAA6C;oBAC7C,IAAI,IAAI,CAAC,sBAAsB,EAAE;wBAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;wBAChC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;qBAC1C;gBACL,CAAC;gBACD;;mBAEG;gBACH,2CAAW,GAAX;oBACI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;oBAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;gBACnC,CAAC;gBACD;;;;mBAIG;gBACH,8CAAc,GAAd,UAAe,KAAK;oBAChB,wDAAwD;oBACxD,IAAI,6EAAc,CAAC,KAAK,CAAC,EAAE;wBACvB,OAAO;qBACV;oBACD,QAAQ,KAAK,CAAC,OAAO,EAAE;wBACnB,KAAK,2DAAI;4BACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;4BACtC,KAAK,CAAC,cAAc,EAAE,CAAC;4BACvB,MAAM;wBACV,KAAK,0DAAG;4BACJ,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;4BACrC,KAAK,CAAC,cAAc,EAAE,CAAC;4BACvB,MAAM;wBACV,KAAK,4DAAK,CAAC;wBACX,KAAK,4DAAK;4BACN,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC9C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;4BAC1B,MAAM;wBACV;4BACI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;qBACzC;gBACL,CAAC;gBACD;;;mBAGG;gBACH,iDAAiB,GAAjB;oBAAA,iBAmBC;oBAlBG,gBAAgB;oBAChB,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;oBAC/D,wFAAwF;oBACxF,qFAAqF;oBACrF,kFAAkF;oBAClF,IAAI,WAAW,KAAK,IAAI,CAAC,mBAAmB,EAAE;wBAC1C,IAAI,CAAC,mBAAmB,GAAG,WAAW,IAAI,EAAE,CAAC;wBAC7C,mEAAmE;wBACnE,8DAA8D;wBAC9D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC;;2BAGlB;4BACI,KAAI,CAAC,gBAAgB,EAAE,CAAC;4BACxB,KAAI,CAAC,yBAAyB,EAAE,CAAC;4BACjC,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;wBAC3C,CAAC,CAAC,CAAC,CAAC;qBACP;gBACL,CAAC;gBACD;;;;;;;mBAOG;gBACH,gDAAgB,GAAhB;oBACI,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBACpC,CAAC;gBAKD,sBAAI,6CAAU;oBAJd;;;uBAGG;yBACH;wBACI,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC,gBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxF,CAAC;oBACD;;;;uBAIG;yBACH,UAAe,KAAK;wBAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BAC9E,OAAO;yBACV;wBACD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC1C,CAAC;;;mBAXA;gBAYD;;;;;mBAKG;gBACH,6CAAa,GAAb,UAAc,KAAK;oBACf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBACd,OAAO,IAAI,CAAC;qBACf;oBACD,gBAAgB;oBAChB,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC9D,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAClC,CAAC;gBACD;;;;;mBAKG;gBACH,4CAAY,GAAZ,UAAa,QAAQ;oBACjB,IAAI,IAAI,CAAC,uBAAuB,EAAE;wBAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;qBACjC;oBACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;wBACnC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;wBACxC,qFAAqF;wBACrF,sFAAsF;wBACtF,mDAAmD;wBACnD,gBAAgB;wBAChB,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;wBACzD,gBAAgB;wBAChB,IAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBACvC,IAAI,GAAG,IAAI,KAAK,EAAE;4BACd,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC;yBAC9B;6BACI;4BACD,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;yBAC9E;qBACJ;gBACL,CAAC;gBACD;;;mBAGG;gBACH,mDAAmB,GAAnB;oBACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;gBAClE,CAAC;gBACD;;;mBAGG;gBACH,wDAAwB,GAAxB;oBACI,gBAAgB;oBAChB,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC3C,gBAAgB;oBAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;oBAChC,gBAAgB;oBAChB,IAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC;oBAC3F,wFAAwF;oBACxF,wFAAwF;oBACxF,iEAAiE;oBACjE,0DAA0D;oBAC1D,wFAAwF;oBACxF,+CAA+C;oBAC/C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAc,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAK,CAAC;oBACxF,yFAAyF;oBACzF,wFAAwF;oBACxF,wFAAwF;oBACxF,2EAA2E;oBAC3E,+FAA+F;oBAC/F,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;wBACjD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,CAAC;qBACvD;gBACL,CAAC;gBAKD,sBAAI,iDAAc;oBAJlB;;;uBAGG;yBACH,cAAuB,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;oBACrD;;;uBAGG;yBACH,UAAmB,KAAK;wBACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;;;mBAPoD;gBAQrD;;;;;;;;;mBASG;gBACH,6CAAa,GAAb,UAAc,SAAS;oBACnB,gBAAgB;oBAChB,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAC;oBACpE,4EAA4E;oBAC5E,gBAAgB;oBAChB,IAAM,YAAY,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;oBACvE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC;gBAC/D,CAAC;gBACD;;;;mBAIG;gBACH,qDAAqB,GAArB,UAAsB,SAAS;oBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC;gBACD;;;;;;;mBAOG;gBACH,8CAAc,GAAd,UAAe,UAAU;oBACrB,gBAAgB;oBAChB,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC7E,IAAI,CAAC,aAAa,EAAE;wBAChB,OAAO;qBACV;oBACD,0DAA0D;oBAC1D,gBAAgB;oBAChB,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAC;oBAC9D,+CAAoE,EAAlE,0BAAU,EAAE,4BAAsD,CAAC;oBAC3E,gBAAgB;oBAChB,IAAI,cAAc,CAAC;oBACnB,gBAAgB;oBAChB,IAAI,aAAa,CAAC;oBAClB,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,KAAK,EAAE;wBACrC,cAAc,GAAG,UAAU,CAAC;wBAC5B,aAAa,GAAG,cAAc,GAAG,WAAW,CAAC;qBAChD;yBACI;wBACD,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,GAAG,UAAU,CAAC;wBACrE,cAAc,GAAG,aAAa,GAAG,WAAW,CAAC;qBAChD;oBACD,gBAAgB;oBAChB,IAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC;oBAC7C,gBAAgB;oBAChB,IAAM,eAAe,GAAG,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;oBACzD,IAAI,cAAc,GAAG,gBAAgB,EAAE;wBACnC,sDAAsD;wBACtD,IAAI,CAAC,cAAc,IAAI,gBAAgB,GAAG,cAAc,GAAG,sBAAsB,CAAC;qBACrF;yBACI,IAAI,aAAa,GAAG,eAAe,EAAE;wBACtC,qDAAqD;wBACrD,IAAI,CAAC,cAAc,IAAI,aAAa,GAAG,eAAe,GAAG,sBAAsB,CAAC;qBACnF;gBACL,CAAC;gBACD;;;;;;;;mBAQG;gBACH,uDAAuB,GAAvB;oBACI,gBAAgB;oBAChB,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;oBACvG,IAAI,CAAC,SAAS,EAAE;wBACZ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qBAC3B;oBACD,IAAI,SAAS,KAAK,IAAI,CAAC,uBAAuB,EAAE;wBAC5C,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;qBAC1C;oBACD,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;gBAC7C,CAAC;gBACD;;;;;;;;;mBASG;gBACH,uDAAuB,GAAvB;oBACI,sDAAsD;oBACtD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC;oBACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC/E,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;gBAC3C,CAAC;gBACD;;;;;;;mBAOG;gBACH,qDAAqB,GAArB;oBACI,gBAAgB;oBAChB,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;oBAChE,gBAAgB;oBAChB,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAC;oBACpE,OAAO,CAAC,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC/C,CAAC;gBACD;;;mBAGG;gBACH,yDAAyB,GAAzB;oBACI,gBAAgB;oBAChB,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBACpD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACrD,gBAAgB;oBAChB,IAAM,oBAAoB,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;oBACzF,IAAI,oBAAoB,EAAE;wBACtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;qBACrD;yBACI;wBACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;qBACvB;gBACL,CAAC;gBACD;;;mBAGG;gBACH,6CAAa,GAAb;oBACI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC/B,CAAC;gBACD;;;;;mBAKG;gBACH,qDAAqB,GAArB,UAAsB,SAAS;oBAA/B,iBAiBC;oBAhBG,4BAA4B;oBAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,uEAAuE;oBACvE,kDAAK,CAAC,mBAAmB,EAAE,sBAAsB,CAAC;wBAC9C,uFAAuF;yBACtF,IAAI,CAAC,gEAAS,CAAC,kDAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;yBAC5D,SAAS,CAAC,EAAC;;mBAGhB;wBACU,uCAA+D,EAA7D,wCAAiB,EAAE,sBAA0C,CAAC;wBACtE,wDAAwD;wBACxD,IAAI,QAAQ,KAAK,CAAC,IAAI,QAAQ,IAAI,iBAAiB,EAAE;4BACjD,KAAI,CAAC,aAAa,EAAE,CAAC;yBACxB;oBACL,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC;gBACD;;;;;mBAKG;gBACH,yCAAS,GAAT,UAAU,QAAQ;oBACd,gBAAgB;oBAChB,IAAM,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;oBAC1E,uFAAuF;oBACvF,sCAAsC;oBACtC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,OAAO,EAAE,iBAAiB,qBAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;gBACjE,CAAC;gBACL,4BAAC;YAAD,CAAC;YACD,qBAAqB,CAAC,UAAU,GAAG;gBAC/B,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,8CAA8C;yBAC3D,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,qBAAqB,CAAC,cAAc,GAAG,cAAM;gBACzC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,oEAAa,EAAE;gBACvB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAQ,EAAE;gBAClB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EAR4C,CAQ5C,CAAC;YAEF;;;eAGG;YACH;;;;eAIG;YACH,sCAAsC;YACtC;gBAAgC,qCAAqB;gBACjD;;;;;;;;mBAQG;gBACH,2BAAY,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ;gBAC/E,yEAAyE;gBACzE,aAAa;oBAFb,YAGI,kBAAM,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,SAE5F;oBADG,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;gBAChC,CAAC;gBAKD,sBAAI,4CAAa;oBAJjB;;;uBAGG;yBACH,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnD;;;uBAGG;yBACH,UAAkB,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,mFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;mBAL7B;gBAMnD;;;;mBAIG;gBACH,yCAAa,GAAb,UAAc,KAAK;oBACf,KAAK,CAAC,cAAc,EAAE,CAAC;gBAC3B,CAAC;gBACL,wBAAC;YAAD,CAAC,CAlC+B,qBAAqB,GAkCpD;YACD,iBAAiB,CAAC,UAAU,GAAG;gBAC3B,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,yCAAyC;yBACtD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,iBAAiB,CAAC,cAAc,GAAG,cAAM;gBACrC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,oEAAa,EAAE;gBACvB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAQ,EAAE;gBAClB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EARwC,CAQxC,CAAC;YACF,iBAAiB,CAAC,cAAc,GAAG;gBAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;aACnC,CAAC;YACF;;;;;;eAMG;YACH;gBAA2B,gCAAiB;gBACxC;;;;;;;;mBAQG;gBACH,sBAAY,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ;gBAC/E,yEAAyE;gBACzE,aAAa;2BACT,kBAAM,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC;gBAC7F,CAAC;gBACL,mBAAC;YAAD,CAAC,CAf0B,iBAAiB,GAe3C;YACD,YAAY,CAAC,UAAU,GAAG;gBACtB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,gBAAgB;4BACzC,QAAQ,EAAE,qvCAAqvC;4BAC/vC,MAAM,EAAE,CAAC,ukFAAukF,CAAC;4BACjlF,MAAM,EAAE,CAAC,eAAe,CAAC;4BACzB,OAAO,EAAE,CAAC,oBAAoB,EAAE,cAAc,CAAC;4BAC/C,aAAa,EAAE,+DAAiB,CAAC,IAAI;4BACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;4BAC/C,IAAI,EAAE;gCACF,OAAO,EAAE,gBAAgB;gCACzB,oDAAoD,EAAE,yBAAyB;gCAC/E,4BAA4B,EAAE,gCAAgC;6BACjE;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,YAAY,CAAC,cAAc,GAAG,cAAM;gBAChC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,oEAAa,EAAE;gBACvB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAQ,EAAE;gBAClB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EARmC,CAQnC,CAAC;YACF,YAAY,CAAC,cAAc,GAAG;gBAC1B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,6DAAe,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC;gBAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACpE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACvF,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACrE,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;gBAClF,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;aAC7F,CAAC;YAEF;;;eAGG;YACH;;;;eAIG;YACH,sCAAsC;YACtC;gBAA6B,kCAAqB;gBAC9C;;;;;;;;mBAQG;gBACH,wBAAY,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa;gBACrE;;mBAEG;gBACH,QAAQ,EAAE,aAAa;oBAJvB,YAKI,kBAAM,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,SAM5F;oBALG,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B;;uBAEG;oBACH,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;;gBAC3B,CAAC;gBAKD,sBAAI,2CAAe;oBAJnB;;;uBAGG;yBACH,cAAwB,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACvD;;;uBAGG;yBACH,UAAoB,KAAK;wBACrB,gBAAgB;wBAChB,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC;wBAC3D,SAAS,CAAC,MAAM,CAAC,oBAAkB,IAAI,CAAC,eAAiB,CAAC,CAAC;wBAC3D,IAAI,KAAK,EAAE;4BACP,SAAS,CAAC,GAAG,CAAC,oBAAkB,KAAO,CAAC,CAAC;yBAC5C;wBACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAClC,CAAC;;;mBAbsD;gBAkBvD,sBAAI,yCAAa;oBAJjB;;;uBAGG;yBACH,cAAsB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACnD;;;uBAGG;yBACH,UAAkB,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,mFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;mBAL7B;gBAMnD;;;mBAGG;gBACH,sCAAa,GAAb;oBACI,OAAO;gBACX,CAAC;gBACD;;mBAEG;gBACH,2CAAkB,GAAlB;oBAAA,iBAUC;oBATG,qFAAqF;oBACrF,iFAAiF;oBACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,gEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,EAAC;;uBAGjF;wBACI,KAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC5B,CAAC,CAAC,CAAC,CAAC;oBACJ,iBAAM,kBAAkB,WAAE,CAAC;gBAC/B,CAAC;gBACD;;;;;mBAKG;gBACH,yCAAgB,GAAhB,UAAiB,QAAQ;oBACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBACd,OAAO;qBACV;oBACD,gBAAgB;oBAChB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;oBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;4BACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;4BACvB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;4BACvC,OAAO;yBACV;qBACJ;oBACD,yDAAyD;oBACzD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACxB,CAAC;gBACL,qBAAC;YAAD,CAAC,CA9F4B,qBAAqB,GA8FjD;YACD,cAAc,CAAC,UAAU,GAAG;gBACxB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,sCAAsC;yBACnD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,cAAc,CAAC,cAAc,GAAG,cAAM;gBAClC,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,oEAAa,EAAE;gBACvB,EAAE,IAAI,EAAE,+DAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBACpD,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EARqC,CAQrC,CAAC;YACF,cAAc,CAAC,cAAc,GAAG;gBAC5B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBAClC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;gBAChC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;aAC3B,CAAC;YACF;;;eAGG;YACH;gBAAwB,6BAAc;gBAClC;;;;;;;;mBAQG;gBACH,mBAAY,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa;gBACrE;;mBAEG;gBACH,QAAQ,EAAE,aAAa;2BACnB,kBAAM,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,aAAa,CAAC;gBAC7F,CAAC;gBACL,gBAAC;YAAD,CAAC,CAjBuB,cAAc,GAiBrC;YACD,SAAS,CAAC,UAAU,GAAG;gBACnB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,mBAAmB;4BAC5C,QAAQ,EAAE,yBAAyB;4BACnC,MAAM,EAAE,CAAC,OAAO,CAAC;4BACjB,QAAQ,EAAE,0pCAA0pC;4BACpqC,MAAM,EAAE,CAAC,ksFAAksF,CAAC;4BAC5sF,IAAI,EAAE;gCACF,OAAO,EAAE,gCAAgC;gCACzC,oDAAoD,EAAE,yBAAyB;gCAC/E,4BAA4B,EAAE,gCAAgC;gCAC9D,qBAAqB,EAAE,wCAAwC;gCAC/D,oBAAoB,EAAE,oBAAoB;gCAC1C,kBAAkB,EAAE,kBAAkB;6BACzC;4BACD,aAAa,EAAE,+DAAiB,CAAC,IAAI;4BACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;yBAClD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,SAAS,CAAC,cAAc,GAAG,cAAM;gBAC7B,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,gEAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBAC1D,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAiB,EAAE;gBAC3B,EAAE,IAAI,EAAE,oEAAa,EAAE;gBACvB,EAAE,IAAI,EAAE,+DAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,CAAC,EAAE;gBACpD,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EARgC,CAQhC,CAAC;YACF,SAAS,CAAC,cAAc,GAAG;gBACvB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,6DAAe,EAAE,IAAI,EAAE,CAAC,gEAAU,CAAC,EAAC;;2CAGzC,cAAM,iBAAU,EAAV,CAAU,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBAC1D,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACpE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACvF,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBACrE,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;gBAClF,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;aAC7F,CAAC;YACF,iDAAiD;YACjD;gBAAA;gBACA,CAAC;gBAAD,0BAAC;YAAD,CAAC;YACD,gBAAgB;YAChB,IAAM,oBAAoB,GAAG,4EAAa,CAAC,iFAAkB,CAAC,4EAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACnG;;eAEG;YACH,sCAAsC;YACtC;gBAA8B,mCAAoB;gBAC9C;;;;;;;mBAOG;gBACH,yBAAY,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAE,QAAQ,EAAE,aAAa,EAAE,aAAa;oBAA/F,YACI,iBAAO,SAcV;oBAbG,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;oBACnC;;uBAEG;oBACH,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,YAAY,GAAG,mBAAmB,IAAI,EAAE,CAAC;oBAC9C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,aAAa,KAAK,gBAAgB,EAAE;wBACpC,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;qBACvE;oBACD,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;;gBACtC,CAAC;gBAKD,sBAAI,mCAAM;oBAJV;;;uBAGG;yBACH,cAAe,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvC;;;uBAGG;yBACH,UAAW,KAAK;wBACZ,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;4BAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;4BACvB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBACrD;oBACL,CAAC;;;mBAVsC;gBAgBvC,sBAAI,2CAAc;oBALlB;;;;uBAIG;yBACH;wBACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa;4BACvE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;oBACrC,CAAC;;;mBAAA;gBACD;;mBAEG;gBACH,+BAAK,GAAL;oBACI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAC1C,CAAC;gBACD;;mBAEG;gBACH,qCAAW,GAAX;oBACI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvD,CAAC;gBACL,sBAAC;YAAD,CAAC,CA7D6B,oBAAoB,GA6DjD;YACD,eAAe,CAAC,UAAU,GAAG;gBACzB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,8EAA8E;4BAC9E,QAAQ,EAAE,uCAAuC;yBACpD,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,eAAe,CAAC,cAAc,GAAG,cAAM;gBACnC,EAAE,IAAI,EAAE,cAAc,EAAE;gBACxB,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,gFAAyB,EAAE,EAAE,CAAC,EAAE;gBAC3G,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;gBACxE,EAAE,IAAI,EAAE,+DAAY,EAAE;gBACtB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EAPsC,CAOtC,CAAC;YACF,eAAe,CAAC,cAAc,GAAG;gBAC7B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,mDAAK,EAAE,CAAC;aAC5B,CAAC;YACF;;eAEG;YACH;gBAAyB,8BAAe;gBACpC;;;;;;;;;mBASG;gBACH,oBAAY,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa;oBAA/G,YACI,kBAAM,SAAS,EAAE,UAAU,EAAE,mBAAmB,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,SAG3F;oBAFG,KAAI,CAAC,cAAc,GAAG,IAAI,qEAAc,CAAC,KAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAC7E,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;;gBACrE,CAAC;gBACD;;mBAEG;gBACH,gCAAW,GAAX;oBACI,iBAAM,WAAW,WAAE,CAAC;oBACpB,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC;gBAC/C,CAAC;gBACL,iBAAC;YAAD,CAAC,CAvBwB,eAAe,GAuBvC;YACD,UAAU,CAAC,UAAU,GAAG;gBACpB,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC;4BACd,QAAQ,EAAE,8BAA8B;4BACxC,QAAQ,EAAE,YAAY;4BACtB,MAAM,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC;4BACjD,IAAI,EAAE;gCACF,OAAO,EAAE,cAAc;gCACvB,qBAAqB,EAAE,wBAAwB;gCAC/C,sBAAsB,EAAE,UAAU;gCAClC,iBAAiB,EAAE,UAAU;gCAC7B,0BAA0B,EAAE,UAAU;gCACtC,8BAA8B,EAAE,QAAQ;6BAC3C;yBACJ,EAAE,EAAE;aAChB,CAAC;YACF,kBAAkB;YAClB,UAAU,CAAC,cAAc,GAAG,cAAM;gBAC9B,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnB,EAAE,IAAI,EAAE,wDAAU,EAAE;gBACpB,EAAE,IAAI,EAAE,oDAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,+DAAQ,EAAE;gBAClB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,gFAAyB,EAAE,EAAE,CAAC,EAAE;gBAC3G,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,uDAAS,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;gBACxE,EAAE,IAAI,EAAE,+DAAY,EAAE;gBACtB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,sDAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,oDAAM,EAAE,IAAI,EAAE,CAAC,0FAAqB,EAAE,EAAE,CAAC,EAAE;aACvG,EATiC,CASjC,CAAC;YAEF;;;eAGG;YACH;gBAAA;gBACA,CAAC;gBAAD,oBAAC;YAAD,CAAC;YACD,aAAa,CAAC,UAAU,GAAG;gBACvB,EAAE,IAAI,EAAE,sDAAQ,EAAE,IAAI,EAAE,CAAC;4BACb,OAAO,EAAE;gCACL,6DAAY;gCACZ,sEAAe;gCACf,gEAAY;gCACZ,sEAAe;gCACf,uEAAe;gCACf,6DAAU;6BACb;4BACD,2EAA2E;4BAC3E,OAAO,EAAE;gCACL,sEAAe;gCACf,WAAW;gCACX,WAAW;gCACX,MAAM;gCACN,SAAS;gCACT,UAAU;gCACV,aAAa;6BAChB;4BACD,YAAY,EAAE;gCACV,WAAW;gCACX,WAAW;gCACX,MAAM;gCACN,SAAS;gCACT,kBAAkB;gCAClB,SAAS;gCACT,UAAU;gCACV,UAAU;gCACV,gBAAgB;gCAChB,YAAY;gCACZ,aAAa;gCACb,EAAC,gBAAiB;gCAClB,0FAA0F;gCAC1F,qBAAqB,CAAC,CAAC;gCACvB,EAAC,gBAAiB,CAAC,gBAAgB,CAAC,CAAC;gCACrC,EAAC,gBAAiB,CAAC,cAAc,CAAC,CAAC;gCACnC,EAAC,gBAAiB,CAAC,eAAe,CAAC,CAAC;gCACpC,EAAC,gBAAiB,CAAC,iBAAiB,CAAC,CAAC;gCACtC,EAAC,gBAAiB,CAAC,eAAe,CAAC,CAAC;6BACvC;yBACJ,EAAE,EAAE;aAChB,CAAC;YAEF;;;eAGG;YAEH;;;eAGG;YAEH;;;eAGG;YAGH,gCAAgC;YDoDhC,KAAK;QAAC,CAAC,CAAC;KAEP,CAAC,CAAC,CAAC;AACJ,gJAAgJ","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"default~components-genre-list-genre-list-module~components-movie-details-movie-details-module~compon~848b418d\"],{\n\n/***/ \"./node_modules/@angular/material/esm2015/tabs.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/@angular/material/esm2015/tabs.js ***!\n  \\********************************************************/\n/*! exports provided: MatTabsModule, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, matTabsAnimations, ɵa24, ɵb24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabsModule\", function() { return MatTabsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatInkBar\", function() { return MatInkBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MAT_INK_BAR_POSITIONER\", function() { return _MAT_INK_BAR_POSITIONER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabBody\", function() { return MatTabBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MatTabBodyBase\", function() { return _MatTabBodyBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabBodyPortal\", function() { return MatTabBodyPortal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabHeader\", function() { return MatTabHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MatTabHeaderBase\", function() { return _MatTabHeaderBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabLabelWrapper\", function() { return MatTabLabelWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTab\", function() { return MatTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabLabel\", function() { return MatTabLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabNav\", function() { return MatTabNav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabLink\", function() { return MatTabLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MatTabNavBase\", function() { return _MatTabNavBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MatTabLinkBase\", function() { return _MatTabLinkBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabContent\", function() { return MatTabContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabChangeEvent\", function() { return MatTabChangeEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAT_TABS_CONFIG\", function() { return MAT_TABS_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_MatTabGroupBase\", function() { return _MatTabGroupBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatTabGroup\", function() { return MatTabGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matTabsAnimations\", function() { return matTabsAnimations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa24\", function() { return _MAT_INK_BAR_POSITIONER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb24\", function() { return MatPaginatedTabHeader; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser/animations */ \"./node_modules/@angular/platform-browser/fesm2015/animations.js\");\n/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/portal */ \"./node_modules/@angular/cdk/esm2015/portal.js\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/core */ \"./node_modules/@angular/material/esm2015/core.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/animations */ \"./node_modules/@angular/animations/fesm2015/animations.js\");\n/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/bidi */ \"./node_modules/@angular/cdk/esm2015/bidi.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/coercion */ \"./node_modules/@angular/cdk/esm2015/coercion.js\");\n/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/scrolling */ \"./node_modules/@angular/cdk/esm2015/scrolling.js\");\n/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/a11y */ \"./node_modules/@angular/cdk/esm2015/a11y.js\");\n/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/keycodes */ \"./node_modules/@angular/cdk/esm2015/keycodes.js\");\n/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/platform */ \"./node_modules/@angular/cdk/esm2015/platform.js\");\n/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/observers */ \"./node_modules/@angular/cdk/esm2015/observers.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"InjectionToken\"]('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"TemplateRef\"] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__[\"CdkPortal\"] {\n}\nMatTabLabel.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinDisabled\"])(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subject\"]();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__[\"TemplatePortal\"](this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"], args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectionStrategy\"].OnPush,\n                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewEncapsulation\"].None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewContainerRef\"] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ContentChild\"], args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ContentChild\"], args: [MatTabContent, { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"TemplateRef\"], static: true },] }],\n    _implicitContent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"TemplateRef\"], { static: true },] }],\n    textLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], args: ['label',] }],\n    ariaLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], args: ['aria-label',] }],\n    ariaLabelledby: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"trigger\"])('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"state\"])('center, void, left-origin-center, right-origin-center', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"style\"])({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"state\"])('left', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"style\"])({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"state\"])('right', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"style\"])({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"transition\"])('* => left, * => right, left => center, right => center', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"transition\"])('void => left-origin-center', [\n            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"style\"])({ transform: 'translate3d(-100%, 0, 0)' }),\n            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"transition\"])('void => right-origin-center', [\n            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"style\"])({ transform: 'translate3d(100%, 0, 0)' }),\n            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_5__[\"animate\"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__[\"CdkPortalOutlet\"] {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subscription\"].EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subscription\"].EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"startWith\"])(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ComponentFactoryResolver\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewContainerRef\"] },\n    { type: MatTabBody, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"forwardRef\"])((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subscription\"].EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subject\"]();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"](true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"distinctUntilChanged\"])((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-body-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    _beforeCentering: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    _afterLeavingCenter: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    _onCentered: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    _content: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"], args: ['content',] }],\n    origin: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    animationDuration: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    position: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }]\n};\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"], args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewEncapsulation\"].None,\n                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectionStrategy\"].OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__[\"PortalHostDirective\"], { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"InjectionToken\"]('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinColor\"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinDisableRipple\"])(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subscription\"].EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subscription\"].EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"](true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__[\"coerceBooleanProperty\"])(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__[\"coerceNumberProperty\"])(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"merge\"])(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-group-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [MAT_TABS_CONFIG,] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    selectedIndex: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    headerPosition: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    animationDuration: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    backgroundColor: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    selectedIndexChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    focusChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    animationDone: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }],\n    selectedTabChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Output\"] }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"], args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewEncapsulation\"].None,\n                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectionStrategy\"].OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [MAT_TABS_CONFIG,] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ContentChildren\"], args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabHeader', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinDisabled\"])(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"normalizePassiveListenerOptions\"])({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subject\"]();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new rxjs__WEBPACK_IMPORTED_MODULE_4__[\"Subject\"]();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"fromEvent\"])(_elementRef.nativeElement, 'mouseleave')\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__[\"coerceNumberProperty\"])(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"fromEvent\"])(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"fromEvent\"])(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"of\"])(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__[\"FocusKeyManager\"](this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"merge\"])(dirChange, resize, this._items.changes).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__[\"hasModifierKey\"])(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__[\"HOME\"]:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__[\"END\"]:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__[\"ENTER\"]:\n            case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__[\"SPACE\"]:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"timer\"])(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_4__[\"merge\"])(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-paginated-tab-header'\n            },] },\n];\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__[\"ViewportRuler\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__[\"coerceBooleanProperty\"])(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-header-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__[\"ViewportRuler\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"], args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewEncapsulation\"].None,\n                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectionStrategy\"].OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__[\"ViewportRuler\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ContentChildren\"], args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['previousPaginator', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__[\"coerceBooleanProperty\"])(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"startWith\"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__[\"takeUntil\"])(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-nav-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__[\"ViewportRuler\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    disableRipple: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }],\n    color: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Component\"], args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewEncapsulation\"].None,\n                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectionStrategy\"].OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_6__[\"Directionality\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ChangeDetectorRef\"] },\n    { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__[\"ViewportRuler\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ContentChildren\"], args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"forwardRef\"])((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ViewChild\"], args: ['previousPaginator', { static: false },] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinTabIndex\"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinDisableRipple\"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"mixinDisabled\"])(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-link-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"MAT_RIPPLE_GLOBAL_OPTIONS\"],] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Attribute\"], args: ['tabindex',] }] },\n    { type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__[\"FocusMonitor\"] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Input\"] }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"RippleRenderer\"](this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Directive\"], args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ElementRef\"] },\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgZone\"] },\n    { type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__[\"Platform\"] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"MAT_RIPPLE_GLOBAL_OPTIONS\"],] }] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Attribute\"], args: ['tabindex',] }] },\n    { type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__[\"FocusMonitor\"] },\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__[\"ANIMATION_MODULE_TYPE\"],] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgModule\"], args: [{\n                imports: [\n                    _angular_common__WEBPACK_IMPORTED_MODULE_14__[\"CommonModule\"],\n                    _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"MatCommonModule\"],\n                    _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__[\"PortalModule\"],\n                    _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"MatRippleModule\"],\n                    _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_13__[\"ObserversModule\"],\n                    _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__[\"A11yModule\"],\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    _angular_material_core__WEBPACK_IMPORTED_MODULE_3__[\"MatCommonModule\"],\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                    (/** @type {?} */ (\n                    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                    MatPaginatedTabHeader)),\n                    (/** @type {?} */ (_MatTabGroupBase)),\n                    (/** @type {?} */ (_MatTabNavBase)),\n                    (/** @type {?} */ (_MatTabBodyBase)),\n                    (/** @type {?} */ (_MatTabHeaderBase)),\n                    (/** @type {?} */ (_MatTabLinkBase)),\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n//# sourceMappingURL=tabs.js.map\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=default~components-genre-list-genre-list-module~components-movie-details-movie-details-module~compon~848b418d-es2015.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, Optional, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-body-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-group-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-paginated-tab-header'\n            },] },\n];\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-header-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-nav-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-link-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                    (/** @type {?} */ (\n                    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                    MatPaginatedTabHeader)),\n                    (/** @type {?} */ (_MatTabGroupBase)),\n                    (/** @type {?} */ (_MatTabNavBase)),\n                    (/** @type {?} */ (_MatTabBodyBase)),\n                    (/** @type {?} */ (_MatTabHeaderBase)),\n                    (/** @type {?} */ (_MatTabLinkBase)),\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTabsModule, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatPaginatedTabHeader as ɵb24 };\n//# sourceMappingURL=tabs.js.map\n"]}